
    {
    "library": {
        "active": true,
        "required": false,
        "path": ""
    },
    "fasta_list": {
        "active": true,
        "required": false,
        "path": [
            ""
        ]
    },
    "raw_file_list": {
        "active": true,
        "required": false,
        "path": [
            ""
        ]
    },
    "output_directory": {
        "active": true,
        "required": true,
        "path": ""
    },
    "config": [
        {
            "id": "general",
            "name": "General",
            "hidden": false,
            "parameters": [
                {   
                    "id": "thread_count",
                    "name": "Number of Threads",
                    "value": 10,
                    "description": "Number of threads to use for parallel processing.",
                    "type": "number"
                },
                {
                    "id": "reuse_calibration",
                    "name": "Reuse Calibration",
                    "value": true,
                    "description": "AlphaDIA will save the calibration parameters in the project file. If this option is enabled, the calibration parameters will be reused for subsequent searches of the same file.",
                    "type": "boolean"
                },
                {
                    "id": "reuse_quant",
                    "name": "Reuse Ion Quantities",
                    "value": false,
                    "description": "AlphaDIA will save the quantification results in the project file. If this option is enabled, the quantiitative features will be reused for subsequent searches of the same file.",
                    "type": "boolean"
                },
                {
                    "id": "save_figures",
                    "name": "Save Figures",
                    "value": false,
                    "description": "AlphaDIA will save figures during calibration. This can be useful for debugging.",
                    "type": "boolean"
                },
                {
                    "id": "mmap_detector_events",
                    "name": "Use Memory Mapped Files",
                    "value": false,
                    "description": "AlphaDIA will use memory mapped files to load detector events. This can allow processing large files even if the system does not have enough memory.",
                    "type": "boolean"
                },
                {
                    "id": "astral_ms1",
                    "name": "Use Astral MS1",
                    "value": false,
                    "description": "AlphaDIA will use the Astral detector for MS1 information, if available.",
                    "type": "boolean"
                }
            ]
        },
        {
            "id": "library_loading",
            "name": "Spectral Library",
            "hidden": false,
            "parameters": [
                {
                    "id": "channel_filter",
                    "name": "Channel Filter",
                    "value": "",
                    "description": "Comma separated list eg. 1,2,3. Only precursors with matching channels will be loaded. Leave empty to load all available channels.",
                    "type": "string"          
                },
                {
                    "id": "exclude_shared_ions",
                    "name": "Exclude Shared Ions",
                    "value": true,
                    "description": "When searching a multiplexed sample some fragment ions are not specific for a single channel. If this option is enabled, these ions will be excluded from the search.",
                    "type": "boolean"
                }
            ]

        },
        {
            "id": "extraction_target",
            "name": "Search Settings",
            "hidden": false,
            "parameters": [
                {
                    "id": "target_num_candidates",
                    "name": "Number of Candidates",
                    "value": 5,
                    "description": "Number of candidates to extract per precursor.",
                    "type": "number"
                },
                {
                    "id": "target_ms1_tolerance",
                    "name": "MS1 Tolerance",
                    "value": 15,
                    "description": "MS1 tolerance in ppm. Search windows are optimized and calibrated during processing. The window is reduced until this tolerance is reached.",
                    "type": "number"
                },
                {
                    "id": "target_ms2_tolerance",
                    "name": "MS2 Tolerance",
                    "value": 15,
                    "description": "MS2 tolerance in ppm. Search windows are optimized and calibrated during processing. The window is reduced until this tolerance is reached.",
                    "type": "number"
                },
                {
                    "id": "target_mobility_tolerance",
                    "name": "Mobility Tolerance",
                    "value": 0.04,
                    "description": "Mobility tolerance in 1/K_0. Search windows are optimized and calibrated during processing. The window is reduced until this tolerance is reached.",
                    "type": "number"
                },
                {
                    "id": "target_rt_tolerance",
                    "name": "RT Tolerance",
                    "value": 30,
                    "description": "Retention time tolerance in seconds. Search windows are optimized and calibrated during processing. The window is reduced until this tolerance is reached.",
                    "type": "number"
                }
            ]
        },
        {
            "id": "fdr",
            "name": "False Discovery Rate Correction",
            "hidden": false,
            "parameters": [
                {
                    "id": "fdr",
                    "name": "FDR",
                    "value": 0.01,
                    "description": "Maximum false discovery rate for PSMs.",
                    "type": "number"
                },
                {
                    "id": "competetive_scoring",
                    "name": "Competetive Scoring",
                    "value": true,
                    "description": "If enabled, only the best scoring candidate per target decoy pair is retained.",
                    "type": "boolean"
                },
                {
                    "id": "channel_wise_fdr",
                    "name": "Channel wise FDR",
                    "value": false,
                    "description": "In the initial pass before propagating identifications the FDR is calculated for each channel separately. This can be usefull if the composition of the channels differs drastically.",
                    "type": "boolean"
                },
                {
                    "id": "keep_decoys",
                    "name": "Keep Decoys",
                    "value": false,
                    "description": "If enabled, decoy PSMs will be retained in the output.",
                    "type": "boolean"
                }
            ]
        },
        {
            "id": "extraction_initial",
            "name": "Initial Search Settings",
            "hidden": true,
            "parameters": [
                {
                    "id": "initial_num_candidates",
                    "name": "Number of Candidates",
                    "value": 2,
                    "description": "Initial number of candidates to extract per precursor.",
                    "type": "number"
                },
                {
                    "id": "initial_ms1_tolerance",
                    "name": "MS1 Tolerance",
                    "value": 30,
                    "description": "Initial MS1 tolerance in ppm. ",
                    "type": "number"
                },
                {
                    "id": "initial_ms2_tolerance",
                    "name": "MS2 Tolerance",
                    "value": 30,
                    "description": "Initial MS2 tolerance in ppm.",
                    "type": "number"
                },
                {
                    "id": "initial_mobility_tolerance",
                    "name": "Mobility Tolerance",
                    "value": 0.08,
                    "description": "Initial mobility tolerance in 1/K_0.",
                    "type": "number"
                },
                {
                    "id": "initial_rt_tolerance",
                    "name": "RT Tolerance",
                    "value": 240,
                    "description": "Initial retention time tolerance in seconds.",
                    "type": "number"
                }
            ]
        },
        {
            "id": "multiplexing",
            "name": "Multiplexing",
            "hidden": false,
            "parameters": [
                {   
                    "id": "multiplexed_quant",
                    "name": "Enable Multiplexing",
                    "value": false,
                    "description": "Quantify and score identification across non-isobaric labled channels.",
                    "type": "boolean"
                },
                {
                    "id": "target_channels",
                    "name": "Target Channels",
                    "value": "4,8",
                    "description": "Target channels contain regular samples and are used for quantification.",
                    "type": "string"
                },
                {
                    "id": "decoy_channel",
                    "name": "Decoy Channel",
                    "value": 12,
                    "description": "Non-existant channel used for decoy identifications.",
                    "type": "number"
                },
                {
                    "id": "reference_channel",
                    "name": "Reference Channel",
                    "value": 0,
                    "description": "The reference channel is only used for guiding identification and is not used for quantification. Some features will be calculated with respect to the reference channel.",
                    "type": "number"
                },
                {
                    "id": "competetive_scoring",
                    "name": "Competetive Scoring",
                    "value": true,
                    "description": "If enabled, only the best scoring candidate per target decoy pair is retained.",
                    "type": "boolean"
                }
            ]
        },
        {
            "id": "selection_config",
            "name": "Selection Configuration",
            "hidden": true,
            "parameters": [
                {
                    "id": "peak_len_rt",
                    "name": "peak_len_rt",
                    "value": 10,
                    "description": "",
                    "type": "number"
                },
                {
                    "id": "sigma_scale_rt",
                    "name": "sigma_scale_rt",
                    "value": 0.5,
                    "description": "",
                    "type": "number"
                },
                {
                    "id": "peak_len_mobility",
                    "name": "peak_len_mobility",
                    "value": 0.1,
                    "description": "",
                    "type": "number"
                },
                {
                    "id": "sigma_scale_mobility",
                    "name": "sigma_scale_mobility",
                    "value": 1,
                    "description": "",
                    "type": "number"
                },
                {
                    "id": "top_k_precursors",
                    "name": "top_k_precursors",
                    "value": 3,
                    "description": "",
                    "type": "number"
                },
                {
                    "id": "top_k_fragments",
                    "name": "top_k_fragments",
                    "value": 12,
                    "description": "",
                    "type": "number"
                },
                {
                    "id": "kernel_size",
                    "name": "kernel_size",
                    "value": 30,
                    "description": "",
                    "type": "number"
                },
                {
                    "id": "f_mobility",
                    "name": "f_mobility",
                    "value": 1,
                    "description": "",
                    "type": "number"
                },
                {
                    "id": "f_rt",
                    "name": "f_rt",
                    "value": 0.99,
                    "description": "",
                    "type": "number"
                },
                {
                    "id": "center_fraction",
                    "name": "center_fraction",
                    "value": 0.5,
                    "description": "",
                    "type": "number"
                },
                {
                    "id": "min_size_mobility",
                    "name": "min_size_mobility",
                    "value": 8,
                    "description": "",
                    "type": "number"
                },
                {
                    "id": "min_size_rt",
                    "name": "min_size_rt",
                    "value": 3,
                    "description": "",
                    "type": "number"
                },
                {
                    "id": "max_size_mobility",
                    "name": "max_size_mobility",
                    "value": 50,
                    "description": "",
                    "type": "number"
                },
                {
                    "id": "max_size_rt",
                    "name": "max_size_rt",
                    "value": 15,
                    "description": "",
                    "type": "number"
                },
                {
                    "id": "group_channels",
                    "name": "group_channels",
                    "value": false,
                    "description": "",
                    "type": "boolean"
                },
                {
                    "id": "use_weighted_score",
                    "name": "use_weighted_score",
                    "value": true,
                    "description": "",
                    "type": "boolean"
                },
                {
                    "id": "join_close_candidates",
                    "name": "join_close_candidates",
                    "value": true,
                    "description": "",
                    "type": "boolean"
                },
                {
                    "id": "join_close_candidates",
                    "name": "join_close_candidates",
                    "value": true,
                    "description": "",
                    "type": "boolean"
                },
                {
                    "id": "join_close_candidates_scan_threshold",
                    "name": "join_close_candidates_scan_threshold",
                    "value": 0.01,
                    "description": "",
                    "type": "number"
                },
                {
                    "id": "join_close_candidates_cycle_threshold",
                    "name": "join_close_candidates_cycle_threshold",
                    "value": 0.6,
                    "description": "",
                    "type": "number"
                }
            ]
        }
    ]
}