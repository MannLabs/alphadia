
    {
    "library": {
        "active": true,
        "required": false,
        "path": ""
    },
    "fasta_list": {
        "active": true,
        "required": false,
        "path": [
            ""
        ]
    },
    "raw_path_list": {
        "active": true,
        "required": false,
        "path": [
            ""
        ]
    },
    "output_directory": {
        "active": true,
        "required": true,
        "path": ""
    },
    "config": [
        {
            "id": "general",
            "name": "General",
            "hidden": false,
            "parameters": [
                {   
                    "id": "thread_count",
                    "name": "Number of Threads",
                    "value": 10,
                    "description": "Number of threads to use for parallel processing.",
                    "type": "integer"
                },
                {
                    "id": "reuse_calibration",
                    "name": "Reuse Calibration",
                    "value": false,
                    "description": "AlphaDIA will save the calibration parameters in the project file. If this option is enabled, the calibration parameters will be reused for subsequent searches of the same file.",
                    "type": "boolean"
                },
                {
                    "id": "reuse_quant",
                    "name": "Reuse Ion Quantities",
                    "value": false,
                    "description": "AlphaDIA will save the quantification results in the project file. If this option is enabled, the quantiitative features will be reused for subsequent searches of the same file.",
                    "type": "boolean"
                },
                {
                    "id": "use_gpu",
                    "name": "Use GPU",
                    "value": true,
                    "description": "AlphaDIA will use the GPU for some processing steps like library prediction and scoring.",
                    "type": "boolean"
                },
                {
                    "id": "astral_ms1",
                    "name": "Use Astral MS1",
                    "value": false,
                    "description": "AlphaDIA will use the Astral detector for MS1 information, if available.",
                    "type": "boolean"
                },
                {
                    "id": "log_level",
                    "name": "Log Level",
                    "value": "INFO",
                    "description": "Log level for the console output.",
                    "type": "dropdown",
                    "options": [
                        "DEBUG",
                        "INFO",
                        "PROGRESS",
                        "WARNING",
                        "ERROR"
                    ]
                }
            ]
        },
        {
            "id": "library_prediction",
            "name": "Library prediction",
            "hidden": false,
            "parameters": [
                {   
                    "id": "predict",
                    "name": "Predict Library",
                    "value": false,
                    "description": "Use alphaPeptDeep to predict peptide. \n If a FASTA file is provided an in silico digest will be performed. \n If a spectral library is provided precursor properties for library precursor will be performed.",
                    "type": "boolean"
                },
                {   
                    "id": "enzyme",
                    "name": "Enzyme",
                    "value": "trypsin",
                    "description": "Enzyme used for in-silico digest.",
                    "type": "dropdown",
                    "options": [
                        "arg-c",
                        "asp-n",
                        "bnps-skatole",
                        "caspase 1",
                        "caspase 2",
                        "caspase 3",
                        "caspase 4",
                        "caspase 5",
                        "caspase 6",
                        "caspase 7",
                        "caspase 8",
                        "caspase 9",
                        "caspase 10",
                        "chymotrypsin high specificity",
                        "chymotrypsin low specificity",
                        "chymotrypsin",
                        "clostripain",
                        "cnbr",
                        "enterokinase",
                        "factor xa",
                        "formic acid",
                        "glutamyl endopeptidase",
                        "glu-c",
                        "granzyme b",
                        "hydroxylamine",
                        "iodosobenzoic acid",
                        "lys-c",
                        "lys-n",
                        "ntcb",
                        "pepsin ph1.3",
                        "pepsin ph2.0",
                        "proline endopeptidase",
                        "proteinase k",
                        "staphylococcal peptidase i",
                        "thermolysin",
                        "thrombin",
                        "trypsin_full",
                        "trypsin_exception",
                        "trypsin_not_p",
                        "trypsin",
                        "trypsin/p",
                        "non-specific",
                        "no-cleave"
                    ]
                },
                {
                    "id": "fixed_modifications",
                    "name": "Fixed modifications",
                    "value": "Carbamidomethyl@C",
                    "description": "Fixed modifications for in-silico digest. \n Format: Name@AminoAcid",
                    "type": "string"
                },
                {
                    "id": "missed_cleavages",
                    "name": "Missed cleavages",
                    "value": 2,
                    "description": "Number of missed cleavages for in-silico digest.",
                    "type": "integer"
                },
                {   
                    "id": "precursor_len",
                    "name": "Precursor length",
                    "value": [7, 35],
                    "description": "Number of amino acids of generated precursors.",
                    "type": "integer_range"
                },
                
                {   
                    "id": "precursor_charge",
                    "name": "Precursor charge",
                    "value": [2, 4],
                    "description": "Charge states of generated precursors.",
                    "type": "integer_range"
                }, 
                {   
                    "id": "precursor_mz",
                    "name": "Precursor mz",
                    "value": [400.0, 1200.0],
                    "description": "Size limit for generated precursors.",
                    "type": "float_range"
                },
                {   
                    "id": "fragment_mz",
                    "name": "Fragment mz",
                    "value": [100.0, 2000.0],
                    "description": "Size limit for generated fragments.",
                    "type": "float_range"
                },
                {
                    "id": "nce",
                    "name": "Normalized collision energy",
                    "value": 25.0,
                    "description": "Normalized collision energy for fragment generation.",
                    "type": "float"
                },
                {
                    "id": "instrument",
                    "name": "Instrument",
                    "value": "Astral",
                    "description": "Instrument used for ms2 spectrum prediction.",
                    "type": "dropdown",
                    "options": [
                        "Astral",
                        "QE",
                        "timsTOF",
                        "SciexTOF",
                        "Fusion",
                        "Eclipse",
                        "Velos",
                        "Elite",
                        "OrbitrapTribrid",
                        "ThermoTribrid",
                        "QE+",
                        "QEHF",
                        "QEHFX",
                        "Exploris",
                        "Exploris480"
                    ]
                },
                {
                    "id": "save_hdf",
                    "name": "Save library as HDF",
                    "value": true,
                    "description": "Store the library as alphaBase HDF file. This will speed up subsequent searches and will include predicted properties.",
                    "type": "boolean"          
                }
            ]
        },
        {
            "id": "search",
            "name": "Search",
            "hidden": false,
            "parameters": [
                {
                    "id": "channel_filter",
                    "name": "Channel Filter",
                    "value": "",
                    "description": "Comma separated list eg. 1,2,3. Only precursors with matching channels will be loaded. Leave empty to load all available channels.",
                    "type": "string"          
                },
                {
                    "id": "exclude_shared_ions",
                    "name": "Exclude Shared Ions",
                    "value": true,
                    "description": "When searching a multiplexed sample some fragment ions are not specific for a single channel. If this option is enabled, these ions will be excluded from the search.",
                    "type": "boolean"
                },
                {
                    "id": "target_num_candidates",
                    "name": "Number of Candidates",
                    "value": 2,
                    "description": "For every precursor in the library a number of top scoring candidates will be extracted. This number is the maximum number of candidates that will be extracted per precursor.",
                    "type": "integer"
                },
                {
                    "id": "target_ms1_tolerance",
                    "name": "MS1 Tolerance",
                    "value": 5,
                    "description": "MS1 tolerance in ppm. Search windows are optimized and calibrated during processing. The window is reduced until this tolerance is reached.",
                    "type": "float"
                },
                {
                    "id": "target_ms2_tolerance",
                    "name": "MS2 Tolerance",
                    "value": 10,
                    "description": "MS2 tolerance in ppm. Search windows are optimized and calibrated during processing. The window is reduced until this tolerance is reached.",
                    "type": "float"
                },
                {
                    "id": "target_mobility_tolerance",
                    "name": "Mobility Tolerance",
                    "value": 0.04,
                    "description": "Mobility tolerance in 1/K_0. Search windows are optimized and calibrated during processing. The window is reduced until this tolerance is reached.",
                    "type": "float"
                },
                {
                    "id": "target_rt_tolerance",
                    "name": "RT Tolerance",
                    "value": 100,
                    "description": "Retention time tolerance in seconds. Search windows are optimized and calibrated during processing. The window is reduced until this tolerance is reached.",
                    "type": "float"
                }
            ]
        },
        {
            "id": "fdr",
            "name": "False Discovery Rate Correction",
            "hidden": false,
            "parameters": [
                {
                    "id": "fdr",
                    "name": "FDR",
                    "value": 0.01,
                    "description": "Maximum false discovery rate for PSMs.",
                    "type": "float"
                },
                {
                    "id": "group_level",
                    "name": "Inference Level",
                    "value": "proteins",
                    "description": "Inference level for FDR correction.",
                    "type": "dropdown",
                    "options": [
                        "genes",
                        "proteins"
                    ]
                },
                {
                    "id": "inference_strategy",
                    "name": "Inference Strategy",
                    "value": "heuristic",
                    "description": "Inference strategy for protein groups. \n library: Protein groups are used as reported in the library. \n maximum_parsimony: Protein groups are inferred using the maximum parsimony principle. \n heursitic: Protein groups are inferred using maximum parsimony with grouping.",
                    "type": "dropdown",
                    "options": [
                        "library",
                        "maximum_parsimony",
                        "heuristic"
                    ]
                },
                {
                    "id": "competetive_scoring",
                    "name": "Competetive Scoring",
                    "value": true,
                    "description": "If enabled, only the best scoring candidate per target decoy pair is retained.",
                    "type": "boolean"
                },
                {
                    "id": "channel_wise_fdr",
                    "name": "Channel wise FDR",
                    "value": false,
                    "description": "In the initial pass before propagating identifications the FDR is calculated for each channel separately. This can be usefull if the composition of the channels differs drastically.",
                    "type": "boolean"
                },
                {
                    "id": "keep_decoys",
                    "name": "Keep Decoys",
                    "value": false,
                    "description": "If enabled, decoy PSMs will be retained in the output.",
                    "type": "boolean"
                }
            ]
        },
        {
            "id": "search_initial",
            "name": "Initial Search Settings",
            "hidden": true,
            "parameters": [
                {
                    "id": "initial_num_candidates",
                    "name": "Number of Candidates",
                    "value": 2,
                    "description": "Initial number of candidates to extract per precursor.",
                    "type": "integer"
                },
                {
                    "id": "initial_ms1_tolerance",
                    "name": "MS1 Tolerance",
                    "value": 30,
                    "description": "Initial MS1 tolerance in ppm. ",
                    "type": "float"
                },
                {
                    "id": "initial_ms2_tolerance",
                    "name": "MS2 Tolerance",
                    "value": 30,
                    "description": "Initial MS2 tolerance in ppm.",
                    "type": "float"
                },
                {
                    "id": "initial_mobility_tolerance",
                    "name": "Mobility Tolerance",
                    "value": 0.08,
                    "description": "Initial mobility tolerance in 1/K_0.",
                    "type": "float"
                },
                {
                    "id": "initial_rt_tolerance",
                    "name": "RT Tolerance",
                    "value": 240,
                    "description": "Initial retention time tolerance in seconds.",
                    "type": "float"
                }
            ]
        },
        {
            "id": "multiplexing",
            "name": "Multiplexing",
            "hidden": false,
            "parameters": [
                {   
                    "id": "multiplexed_quant",
                    "name": "Enable Multiplexing",
                    "value": false,
                    "description": "Quantify and score identification across non-isobaric labled channels.",
                    "type": "boolean"
                },
                {
                    "id": "target_channels",
                    "name": "Target Channels",
                    "value": "4,8",
                    "description": "Target channels contain regular samples and are used for quantification.",
                    "type": "string"
                },
                {
                    "id": "decoy_channel",
                    "name": "Decoy Channel",
                    "value": 12,
                    "description": "Non-existant channel used for decoy identifications.",
                    "type": "integer"
                },
                {
                    "id": "reference_channel",
                    "name": "Reference Channel",
                    "value": 0,
                    "description": "The reference channel is only used for guiding identification and is not used for quantification. Some features will be calculated with respect to the reference channel.",
                    "type": "integer"
                },
                {
                    "id": "competetive_scoring",
                    "name": "Competetive Scoring",
                    "value": true,
                    "description": "If enabled, only the best scoring candidate per target decoy pair is retained.",
                    "type": "boolean"
                }
            ]
        }
    ]
}