#https://docs.github.com/en/actions/publishing-packages/publishing-docker-images
name: Publish Docker image

on:
  pull_request:
    types: [labeled]   # TODO remove after this is available on main
  workflow_dispatch:
    inputs:
      tag_to_release:
        description: 'Enter tag to release (example: v1.5.5)'
        required: true

jobs:
  push_to_registry:
    if: contains(github.event.pull_request.labels.*.name, 'tmp:docker')  # TODO remove after this is available on main
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag_to_release || 'v1.6.0' }} # TODO remove default after this is available on main
      - name: Get current version
        shell: bash -l {0}
        run: |
          CURRENT_VERSION=$(grep "__version__" alphadia/__init__.py | cut -f3 -d ' ' | sed 's/"//g')
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

#      - name: Extract metadata (tags, labels) for Docker
#        id: meta
#        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
#        with:
#          images: mannlabs/alphadia

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: latest, ${{ steps.get_new_release_tag.outputs.current_version }}
#          labels: ${{ steps.meta.outputs.labels }}


#      - name: Generate artifact attestation
#        uses: actions/attest-build-provenance@v1
#        with:
#          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
#          subject-digest: ${{ steps.push.outputs.digest }}
#          push-to-registry: true
