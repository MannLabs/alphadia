on:
  pull_request:
    branches: [ main, development ]
  workflow_dispatch:

name: FDR performance test

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  fdr_performance_testing:
    name: Loose pip installation
    runs-on: AlphaDIA
    env: # Or as an environment variable
      NEPTUNE_API_TOKEN: ${{ secrets.NEPTUNE_FDR_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 3.9
      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch
      - name: Conda info
        shell: bash -l {0}
        run: conda info
      - name: Pip installation with all loose dependencies
        shell: bash -l {0}
        run: |
          cd misc
          . ./pip_install.sh stable,test
      - name: Run legacy classifier
        env: # Or as an environment variable
          NEPTUNE_API_TOKEN: ${{ secrets.NEPTUNE_FDR_TOKEN }}
        shell: bash -l {0}
        run: |
          conda activate alphadia
          python tests/performance_tests/fdr_test.py \
          --classifier legacy_new_batching \
          --threads 4 \
          --neptune-tag github-action \
          --neptune-tag "branch:${{ steps.extract_branch.outputs.branch }}"
      - name: Run binary classifier
        env: # Or as an environment variable
          NEPTUNE_API_TOKEN: ${{ secrets.NEPTUNE_FDR_TOKEN }}
        shell: bash -l {0}
        run: |
          conda activate alphadia
          python tests/performance_tests/fdr_test.py \
          --classifier binary \
          --threads 4 \
          --neptune-tag github-action \
          --neptune-tag "branch:${{ steps.extract_branch.outputs.branch }}"
