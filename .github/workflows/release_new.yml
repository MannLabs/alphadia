on:
  push:
    branches: [ installer ]
  workflow_dispatch:


name: Release on GitHub

jobs:
  Version_Bumped:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.master_version_bumped.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
      - name: Master version bumped
        id: master_version_bumped
        shell: bash -l {0}
        run: |
          cd misc
          . ./check_version.sh
          echo "version=$current_version" >> $GITHUB_OUTPUT
   
  Create_Draft_On_GitHub:
    runs-on: ubuntu-latest
    needs: Version_Bumped
    outputs:
      upload_url: ${{ steps.draft_release.outputs.upload_url }}
    steps:
      - name: Draft Release
        id: draft_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.Version_Bumped.outputs.version }}
          release_name: v${{ needs.Version_Bumped.outputs.version }}
          draft: true
          prerelease: false

  Create_MacOS_GUI:
    runs-on: macos-latest
    needs: [Create_Draft_On_GitHub, Version_Bumped]
    steps:
    - name : Checkout code
      uses: actions/checkout@v3
    - name: Setup Node.js
      uses: actions/setup-node@v2
    - name: Install dependencies
      run: |
        cd gui
        npm install

    - name: Build GUI
      run: |
        cd release/macos
        build_gui_macos.sh

    - name: Build backend
      run: |
        cd release/macos
        build_backend_macos.sh

    - name: Assemble ZIP
      run: |
        cd release/macos
        build_zip_macos.sh