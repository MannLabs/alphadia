on:
  pull_request:
    branches:
  workflow_dispatch:

name: Default installation and tests

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  stable_installation:
    name: Test stable pip installation on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Setup pip cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
      - name: Conda info
        shell: bash -l {0}
        run: conda info
      - name: Test pip installation with all stable dependencies
        shell: bash -l {0}
        run: |
          cd misc
          . ./pip_install.sh stable,test
      - name: Unittests
        shell: bash -l {0}
        run: |
          cd tests
          . ./run_unit_tests.sh
#  loose_installation:
#    name: Test loose pip installation on ${{ matrix.os }}
#    runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
#        os: [ubuntu-latest, macos-13, windows-latest]
#    steps:
#      - uses: actions/checkout@v4
#      - name: Setup pip cache
#        uses: actions/cache@v3
#        with:
#          path: ~/.cache/pip
#          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
#      - uses: conda-incubator/setup-miniconda@v3
#        with:
#          auto-update-conda: true
#          python-version: ${{ matrix.python-version }}
#      - name: Conda info
#        shell: bash -l {0}
#        run: conda info
#      - name: Test pip installation with all loose dependencies
#        shell: bash -l {0}
#        run: |
#          cd misc
#          . ./pip_install.sh loose,test
#      - name: Unittests
#        shell: bash -l {0}
#        run: |
#          cd tests
#          . ./run_unit_tests.sh
