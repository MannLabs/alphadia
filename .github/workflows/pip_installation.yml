# Perform pip installation (stable, loose) and run tests on all three OS

# For feature branches, we don't test the full matrix (os x [stable, loose]) in order to save time & resources.
# On each push to main, the whole test matrix runs.
# In the (assumed to be rare case) that these full matrix tests fail but the reduced matrix tests passed,
# we will learn about it latest after pushing to main.

on:
  pull_request:
    types: [ labeled ]
  push:
    branches: [ main ]
#  schedule:
#    - cron: "0 0 * * *"   # daily at midnight, to get feedback on the loose version
  workflow_dispatch:

name: Pip install + unit tests

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: false

jobs:
  run-unit-integration-tests-stable:
    if: contains(github.event.pull_request.labels.*.name, 'test:unit') || github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    name: Unit/integration tests 'stable' on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:  [ubuntu-latest, macos-13, windows-latest]
        python-version: ["3.10", "3.11", "3.12"]
    uses: ./.github/workflows/_run_tests.yml
    with:
      python-version: ${{ matrix.python-version }}
      os: ${{ matrix.os }}
      needs-mono: ${{ !contains(matrix.os, 'windows') }}
      install-script: ./pip_install.sh stable,tests alphadia-env ${{ matrix.python-version }} ${{ !contains(matrix.os, 'windows') }}
      test-script: ./run_unit_integration_tests.sh alphadia-env all

  run-unit-integration--tests-loose:
    if: contains(github.event.pull_request.labels.*.name, 'test:unit') || github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    name: Unit/integration tests 'loose' on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-13, windows-latest ]
        python-version: ["3.10", "3.11", "3.12"]
    uses: ./.github/workflows/_run_tests.yml
    with:
      python-version: ${{ matrix.python-version }}
      os: ${{ matrix.os }}
      needs-mono: ${{ !contains(matrix.os, 'windows') }}
      install-script: ./pip_install.sh tests alphadia-env ${{ matrix.python-version }} ${{ !contains(matrix.os, 'windows') }}
      test-script: ./run_unit_integration_tests.sh alphadia-env all
